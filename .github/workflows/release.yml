name: Release Build and Publish

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v2.3.4

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.9'] # Use a specific Python version

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: pyinstaller --name gbk2utf8-${{ matrix.os }} --onefile --windowed main.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gbk2utf8-${{ matrix.os }}
        path: |
          dist/gbk2utf8-windows-latest.exe
          dist/gbk2utf8-ubuntu-latest
          dist/gbk2utf8-macos-latest

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and upload assets

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts # Download all artifacts to a directory named 'artifacts'

    - name: Display structure of downloaded files
      run: ls -R artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }} # Use the tag name that triggered the workflow
        release_name: Release ${{ github.ref_name }}
        body: |
          Automated release for ${{ github.ref_name }}
          Contains builds for Windows, Linux, and macOS.
        draft: false
        prerelease: false

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/gbk2utf8-windows-latest/gbk2utf8-windows-latest.exe
        asset_name: gbk2utf8-windows.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/gbk2utf8-ubuntu-latest/gbk2utf8-ubuntu-latest
        asset_name: gbk2utf8-linux
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/gbk2utf8-macos-latest/gbk2utf8-macos-latest
        asset_name: gbk2utf8-macos
        asset_content_type: application/octet-stream